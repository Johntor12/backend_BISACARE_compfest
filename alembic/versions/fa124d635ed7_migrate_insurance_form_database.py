"""migrate insurance form database

Revision ID: fa124d635ed7
Revises: 427e4f668f8b
Create Date: 2025-08-18 13:23:07.649346

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'fa124d635ed7'
down_revision: Union[str, Sequence[str], None] = '427e4f668f8b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_claim_events_id'), table_name='claim_events')
    op.drop_table('claim_events')
    op.drop_index(op.f('ix_chat_messages_session_id'), table_name='chat_messages')
    op.drop_table('chat_messages')
    op.drop_index(op.f('ix_claim_documents_id'), table_name='claim_documents')
    op.drop_table('claim_documents')
    op.drop_index(op.f('ix_insurance_forms_form_id'), table_name='insurance_forms')
    op.drop_table('insurance_forms')
    op.drop_index(op.f('ix_chat_sessions_user_id'), table_name='chat_sessions')
    op.drop_table('chat_sessions')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('chat_sessions',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('chat_sessions_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('last_active_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('chat_metadata', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='chat_sessions_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index(op.f('ix_chat_sessions_user_id'), 'chat_sessions', ['user_id'], unique=False)
    op.create_table('insurance_forms',
    sa.Column('form_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('ktp_url', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('insurance_card_url', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('policy_number', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('service_type', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('other_service', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('phone_number', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('insurance_form', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('complaint', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('form_id', name=op.f('insurance_forms_pkey'))
    )
    op.create_index(op.f('ix_insurance_forms_form_id'), 'insurance_forms', ['form_id'], unique=False)
    op.create_table('claim_documents',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('claim_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('document_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('document_url', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('uploaded_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['claim_id'], ['claims.id'], name=op.f('claim_documents_claim_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('claim_documents_pkey'))
    )
    op.create_index(op.f('ix_claim_documents_id'), 'claim_documents', ['id'], unique=False)
    op.create_table('chat_messages',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('session_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('role', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('meta', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('external_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['session_id'], ['chat_sessions.id'], name=op.f('chat_messages_session_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('chat_messages_pkey'))
    )
    op.create_index(op.f('ix_chat_messages_session_id'), 'chat_messages', ['session_id'], unique=False)
    op.create_table('claim_events',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('claim_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('event_type', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('event_description', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('event_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['claim_id'], ['claims.id'], name=op.f('claim_events_claim_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('claim_events_pkey'))
    )
    op.create_index(op.f('ix_claim_events_id'), 'claim_events', ['id'], unique=False)
    # ### end Alembic commands ###
